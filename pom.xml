<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 Craig Motlin.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.motlin</groupId>
    <artifactId>junit-java8-runner-parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>JUnit Runner for Java 8 Virtual Extension Methods Parent Project</name>

    <description>A JUnit runner that can detected virtual extension methods annotated with @Test.</description>
    <!--<url>http://junit.org</url>-->
    <inceptionYear>2013</inceptionYear>
    <!--<organization>-->
    <!--<name>JUnit</name>-->
    <!--<url>http://www.junit.org</url>-->
    <!--</organization>-->

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>http://github.com/motlin/JUnit-Java-8-Runner</url>
        <connection>scm:git:https://github.com/motlin/JUnit-Java-8-Runner.git</connection>
        <developerConnection>scm:git:https://github.com:motlin/JUnit-Java-8-Runner.git</developerConnection>
    </scm>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/motlin/JUnit-Java-8-Runner/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <name>Craig Motlin</name>
            <email>craig@motlin.com</email>
        </developer>
    </developers>

    <modules>
        <module>junit-java8-runner</module>
        <module>junit-java8-runner-tests</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdkVersion>1.8</jdkVersion>
    </properties>

    <prerequisites>
        <maven>3.0.4</maven>
    </prerequisites>


    <build>
        <pluginManagement>
            <plugins>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.4.2</version>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <argLine>-XX:-OmitStackTraceInFastThrow</argLine>
                    <runOrder>random</runOrder>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <!--
                This plugin can generate Javadoc by a forked
                process and then package the Javadoc
                in jar archive target/junit-*-javadoc.jar.
                -->
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <show>protected</show>
                    <windowtitle>JUnit Runner for Java 8 Virtual Extension Methods API</windowtitle>
                    <javaApiLinks>
                        <property>
                            <name>api_${jdkVersion}</name>
                            <value>http://docs.oracle.com/javase/${jdkVersion}.0/docs/api/</value>
                        </property>
                    </javaApiLinks>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <!--
            Signs all artifacts before deploying to Maven Central.
            -->
            <build>
                <plugins>
                    <plugin>
                        <!--
                        The goal is to sign all artifacts so that the user may verify them before downloading.
                        The automatic build system may require your key ID, and passphrase specified using system properties:
                        -Dgpg.passphrase="<passphrase>" -Dgpg.keyname="<your key ID>"
                        In order to create the key pair, use the command "gpg &ndash;&ndash;gen-key".
                        (&ndash;&ndash; stands for double dash)
                        -->
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>gpg-sign</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>generate-docs</id>
            <!--
            Generate the documentation artifacts.
            Note: this profile is also required to be active for release
            builds due to the packaging requirements of the Central repo
            -->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadoc</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
